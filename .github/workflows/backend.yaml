name: backend

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "go.mod"
      - "go.sum"
      - ".golangci.yml"
      - "pkg/**"
      - "movies/backend/**"
    branches:
      - main
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4.1.0
        with:
          go-version: 1.24

      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v -json ./... > test-results.json

      - name: Upload Go test results
        uses: actions/upload-artifact@v4
        with:
          name: go-unit-test-results
          path: test-results.json

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4.1.0
        with:
          go-version: 1.24

      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Lint
        uses: golangci/golangci-lint-action@v8.0.0

  image-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: movies/backend/Dockerfile
          push: true
          tags: |
            zbsss/greenlight:${{ github.sha }}
          platforms: linux/amd64,linux/arm64
